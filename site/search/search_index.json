{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#background","title":"Background","text":"<p>sark65 api is a fairly vanilla OAS JSON API. It allows you to programmatically do anything you can do manually at the SARK V6 browser. </p> <p>Using the API you may...</p> <ul> <li>Create custom extensions and new features. </li> <li>Rewrite all or parts of the SARK browser to create a package of your own. </li> <li>Control a remote Asterisk from your app. </li> <li>Control a remote SARK from a management layer.</li> <li>Create an interface to a third party software package. </li> </ul> <p>All of these things are possible with the API.</p>"},{"location":"#requirements","title":"Requirements","text":"<p>sark6api requires a SARK V65 instance running php 8.2 or later.  Only 64 bit architectures are supported for both X86 and ARM and the API uses the Laravel 11 framework. The support code is written in a mix of standalone PHP, bash and C code.</p>"},{"location":"api/","title":"Overview","text":""},{"location":"api/#methods","title":"Methods","text":"<p>sark65api uses the methods GET,POST,PUT,DELETE</p> <ul> <li>GET is used for retrieval but there are some exceptions, in particular where it is used to issue commands of some description</li> <li>POST is used to create NEW instances </li> <li>PUT is used for idempotent operations, usually updates to instance variables but also to enliven a backup or a snapshot. </li> <li>DELETE is used to remove/destroy an instance</li> </ul> <p>N.B.</p> <ul> <li>ALL responses will be returned as JSON arrays and strings</li> <li>ALL regular POST/PUT bodies must ONLY contain raw JSON</li> <li>File upload (backups, greetings and snapshots) will use a regular POST Form and body</li> </ul>"},{"location":"api/#request-notation","title":"Request notation","text":"<p>An HTTPS API Request will take the form:-</p> <pre><code>METHOD /{resource}/{endpoint?}/{parameter?}\n</code></pre> <p>Where a variable ends with a question mark (?) it means the variable is optional.   e.g.</p> <pre><code>GET /agents/{agent?}\n</code></pre> <p>Thus you can request either:-</p> <pre><code>GET /agents\n</code></pre> <p>or:-</p> <pre><code>GET /agents/1021\n</code></pre> <p>The first example above will return ALL agent endpoints, the second will return agent endpoint 1021. In the document a POST/PUT BODY will be described using regular Laravel validation array elements.   e.g.  <pre><code> 'pkey' =&gt; 'required|integer|min:1000|max:9999';\n 'cluster' =&gt; 'required|exists:cluster';\n 'name' =&gt; 'required|alpha_dash';\n 'passwd' =&gt; 'required|integer|min:1000|max:9999';\n</code></pre></p> <p>Most Laravel validators are self explanatory but you can find full information in the Laravel Documentation here:-  https://laravel.com/docs/11.x/validation#available-validation-rules.</p> <ul> <li>In the POST BODY, only the REQUIRED variables are listed.   i.e the minimum you need to supply to get the instance created. </li> <li>In the PUT BODY, all of the update-able variables are listed.</li> </ul> <p>You can freely supply non-required variables during a POST if you wish but you MUST provide ALL of the REQUIRED variables or the Method will fail.</p>"},{"location":"api/#http-status-codes","title":"HTTP Status Codes","text":"<p>sark65api will return a standard HTTP status code with each response.  For more information see here:-  https://www.restapitutorial.com/httpstatuscodes.html</p> <p>Additionally, when required, sark65api will return error messages in JSON format</p> <p>_________________________________________________________________________________________________</p>"},{"location":"auth/","title":"Authorization","text":"<p>Before you can use the API you must be authorised.  Sark65 API uses Laravel Sanctum, which is token based, a little like Github personal-access-tokens.   Before you can use the API you must have a Bearer Token. You may obtain a token in one of two ways:-</p> <ul> <li> <p>an administrator may issue you with a traditional UID/PWD.  When you authorize yourself (i.e. login) with the correct credentials then you will be returned a \"Bearer Token\" which you must supply in the Auth Header for all subsequent calls to the API. </p> </li> <li> <p>an administrator may issue you directly with a Bearer Token.  In these cases there is no requirement to login.   Instead you simply use the Bearer Token when you issue a request to the API.</p> </li> </ul> <p>As an unauthorised user, the ONLY API endpoint you can access is login.   Unless, or until, you succesfully authorize yourself then you will have no other access.  It therefore follows that ALL other requests must be accompanied by a Bearer Token in the Auth Header.</p>"},{"location":"auth/#auth-requests","title":"Auth requests","text":""},{"location":"auth/#login","title":"Login","text":""},{"location":"auth/#post-authlogin","title":"POST /auth/login","text":"<p>Body <pre><code>'email' =&gt; 'email',\n'password' =&gt; 'alpha_dash'\n</code></pre> Returns 200 OK and a Bearer Token on success</p>"},{"location":"auth/#logout","title":"Logout","text":""},{"location":"auth/#get-authlogout","title":"GET /auth/logout","text":"<p>Returns 200 OK on success The existing Bearer Token is destroyed</p>"},{"location":"auth/#register","title":"Register","text":"<p>An authorised user who is also an admin may create a new user with a register request.  The returned details may be passed to the end-user either as a UID/PWD pair or as a bearer token.</p>"},{"location":"auth/#post-authregister","title":"POST /auth/register","text":"<p>Returns 200 OK and a Bearer Token on success</p>"},{"location":"auth/#users","title":"Users","text":"<p>Perform various operations upon the Users relation as follows:-</p>"},{"location":"auth/#get-authusers","title":"GET /auth/users","text":"<p>Returns an index of the users table.</p>"},{"location":"auth/#get-authusersid","title":"GET /auth/users/{id}","text":"<p>Returns the user for a given id.</p>"},{"location":"auth/#get-authusersmailemail","title":"GET /auth/users/mail/{email}","text":"<p>Returns the user for a given email address.</p>"},{"location":"auth/#get-authusersnamename","title":"GET /auth/users/name/{name}","text":"<p>Returns the user(s) for a given name.</p>"},{"location":"auth/#get-authusersendpointendpoint","title":"GET /auth/users/endpoint/{endpoint}","text":"<p>Returns the user(s) for a given SIP endpoint.</p>"},{"location":"auth/#delete-authusersrevokeid","title":"DELETE /auth/users/revoke/{id}","text":"<p>Revokes the token for a given id.</p>"},{"location":"auth/#delete-authusersid","title":"DELETE /auth/users/{id}","text":"<p>Delete (destroy) a given id.</p>"},{"location":"auth/#whoami","title":"Whoami","text":""},{"location":"auth/#get-authwhoami","title":"GET /auth/whoami","text":"<p>Returns 200 OK and the details for the user making the request </p>"},{"location":"auth/#examples","title":"Examples","text":""},{"location":"auth/#example1-login","title":"Example:1 Login","text":"<p> After login you must save the \"accessToken\" for subsequent use.</p>"},{"location":"auth/#example-2-get","title":"Example 2: GET","text":"<p>In this example we will retrieve details for SIP Extension 1000.</p> <p>First we must set the query with the accessToken we received from the login (or from an Administrator). We are using Postman for these examples so it's easy enough to set the bearer in Postman's \"Authorization\" tab.  Then we can run the query to retrieve details for an Extension (in this case Ext1000). </p> <p></p>"},{"location":"general/","title":"API Digest","text":""},{"location":"general/#agents","title":"Agents","text":""},{"location":"general/#get-agentsagent","title":"GET /agents/{agent?}","text":""},{"location":"general/#post-agents","title":"POST /agents","text":"<p>Body: <pre><code>'pkey' =&gt; 'required|integer|min:1000|max:9999';\n'cluster' =&gt; 'required|exists:cluster';\n'name' =&gt; 'required|alpha_dash';\n'passwd' =&gt; 'required|integer|min:1000|max:9999';\n</code></pre></p>"},{"location":"general/#put-agentsagent","title":"PUT /agents/{agent}","text":"<p>Body: <pre><code>'cluster' =&gt; 'exists:cluster,pkey',\n'name' =&gt; 'alpha_dash',\n'passwd' =&gt; 'integer',\n'queue1' =&gt; 'exists:queue|nullable',\n'queue2' =&gt; 'exists:queue|nullable',\n'queue3' =&gt; 'exists:queue|nullable',\n'queue4' =&gt; 'exists:queue|nullable',\n'queue5' =&gt; 'exists:queue|nullable',\n'queue6' =&gt; 'exists:queue|nullable'\n</code></pre></p>"},{"location":"general/#delete-agentsagent","title":"DELETE /agents/{agent}","text":""},{"location":"general/#backups","title":"Backups","text":""},{"location":"general/#get-backups","title":"GET /backups","text":"<p>return a list of available backups on the server</p>"},{"location":"general/#get-backupsbackup","title":"GET /backups/{backup}","text":"<p>Download an existing backup from the server</p>"},{"location":"general/#get-backupsnew","title":"GET /backups/new","text":"<p>Request a new backup be taken and saved in the backup set</p>"},{"location":"general/#post-backups","title":"POST /backups","text":"<p>Upload a local zipped backup to the backup set on the server Body: <pre><code>'uploadzip' =&gt; 'required|file|mimetypesapplication/zip'\n</code></pre></p>"},{"location":"general/#put-backupsbackup","title":"PUT /backups/{backup}","text":"<p>Restore an existing backup from the backup set to the live system.  Choose which elements of the backup set you want to restore by setting the corresponding element to true (N.B. this is JSON true - i.e. no quotes) Body: <pre><code>'restoredb' =&gt; 'boolean',\n'restoreasterisk' =&gt; 'boolean',\n'restoreusergreeting' =&gt; 'boolean',\n'restorevmail' =&gt; 'boolean',\n'restoreldap' =&gt; 'boolean'\n</code></pre></p>"},{"location":"general/#delete-backupsbackup","title":"DELETE /backups/{backup}","text":""},{"location":"general/#class-of-service","title":"Class of Service","text":"<p>There are three elements to CoS:-</p> <ul> <li>A rule (cosrule) which defines a particular dialplan set to be tested</li> <li>A closed instance of an egress rule (cosclose) which applies to a particular endpoint(extension)</li> <li>An open instance of an egress rule (cosopen) which applies to a particular endpoint(extension)</li> </ul> <p>Class of service instances are accessed using the extension number as the key (NOT the Class of Service key)</p>"},{"location":"general/#coscloses","title":"coscloses","text":""},{"location":"general/#get-coscloses","title":"GET /coscloses","text":"<p>returns a list of the cosrule/extension intersections from the database</p>"},{"location":"general/#get-cosclosescosclose","title":"GET /coscloses/{cosclose}","text":""},{"location":"general/#post-cosclosescosclose","title":"POST /coscloses/{cosclose}","text":"<p>create a new cosclose instance Body: 'IPphone_pkey' =&gt; 'exists:ipphone,pkey', 'COS_pkey' =&gt; 'exists:cos,pkey'</p>"},{"location":"general/#deletecosclosescosclose","title":"DELETE/coscloses/{cosclose}","text":""},{"location":"general/#cosopens","title":"cosopens","text":""},{"location":"general/#get-cosopens","title":"GET /cosopens","text":"<p>returns a list of the cosrule/extension intersections from the database</p>"},{"location":"general/#get-cosopenscosopen","title":"GET /cosopens/{cosopen}","text":""},{"location":"general/#post-cosopenescosopen","title":"POST /cosopenes/{cosopen}","text":"<p>create a new cosopen instance Body: 'IPphone_pkey' =&gt; 'exists:ipphone,pkey', 'COS_pkey' =&gt; 'exists:cos,pkey'</p>"},{"location":"general/#deletecosopenscosopen","title":"DELETE/cosopens/{cosopen}","text":""},{"location":"general/#cosrules","title":"cosrules","text":""},{"location":"general/#get-cosrules","title":"GET /cosrules","text":"<p>returns a list of the cosrules from the database</p>"},{"location":"general/#get-cosrulescosrule","title":"GET /cosrules/{cosrule}","text":""},{"location":"general/#post-cosrulescosrule","title":"POST /cosrules/{cosrule}","text":"<p>create a new cosrule instance Body: 'pkey' =&gt; 'required|alpha_dashy', 'dialplan' =&gt; 'required'</p>"},{"location":"general/#deletecosrulescosrule","title":"DELETE/cosrules/{cosrule}","text":""},{"location":"general/#custom-apps","title":"Custom Apps","text":""},{"location":"general/#get-customappscustomapp","title":"GET /customapps/{customapp?}","text":"<p>Return a list or instance of a custom app</p>"},{"location":"general/#post-customapps","title":"POST /customapps","text":"<p>Create a new custom app Body: <pre><code>key' =&gt; 'required'\nluster' =&gt; 'required'\nesc' =&gt; 'string|nullable',\nxtcode' =&gt; 'string|nullable',\nspan' =&gt; 'in:Internal,External,Both,Neither',\n'striptags' =&gt; 'in:YES,NO'\n</code></pre></p>"},{"location":"general/#put-customappscustomapp","title":"PUT /customapps/{customapp}","text":"<p>update a custom app Body: <pre><code>'cluster' =&gt; 'exists:cluster,pkey',\n'desc' =&gt; 'string|nullable',\n'extcode' =&gt; 'string|nullable',\n'span' =&gt; 'in:Internal,External,Both,Neither',\n'striptags' =&gt; 'in:YES,NO'\n</code></pre></p>"},{"location":"general/#delete-customappscustomapp","title":"DELETE  /customapps/{customapp}","text":""},{"location":"general/#recurring-timers-daytimers","title":"Recurring Timers (Daytimers)","text":""},{"location":"general/#get-daytimerdaytimer","title":"GET /daytimer/{daytimer?}","text":""},{"location":"general/#post-daytimers","title":"POST /daytimers","text":"<p>Create a new daytimer Body: <pre><code>'cluster' =&gt; 'required|exists:cluster,pkey',\n'datemonth' =&gt; 'in:*,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31',\n'dayofweek' =&gt; 'in:*,mon,tue,wed,thu,fri,sat,sun',\n 'desc' =&gt; 'string',\n'month' =&gt; 'in:*,jan,feb,mar,apr,may,jun,jul,aug,sep,oct,nov,dec',\n'timespan' =&gt; [\n'regex:/^\\*|(2[0-3]|[01][0-9]):([0-5][0-9])\\-(2[0-3]|[01][0-9]):([0-5][0-9])$/'\n]\n</code></pre></p>"},{"location":"general/#put-daytimersdaytimer","title":"PUT /daytimers/{daytimer}","text":"<p>update a timer Body: <pre><code>'cluster' =&gt; 'required|exists:cluster,pkey',\n'datemonth' =&gt; 'in:*,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31',\n'dayofweek' =&gt; 'in:*,mon,tue,wed,thu,fri,sat,sun',\n'desc' =&gt; 'string',\n'month' =&gt; 'in:*,jan,feb,mar,apr,may,jun,jul,aug,sep,oct,nov,dec',\n'timespan' =&gt; [\n'regex:/^\\*|(2[0-3]|[01][0-9]):([0-5][0-9])\\-(2[0-3]|[01][0-9]):([0-5][0-9])$/'\n]\n</code></pre></p>"},{"location":"general/#delete-daytimersdaytimer","title":"DELETE  /daytimers/{daytimer}","text":""},{"location":"general/#destinations","title":"Destinations","text":"<p>Destinations provides a list of all currently valid destinations within the database.  It has only one method.</p>"},{"location":"general/#get-destinations","title":"GET /destinations","text":""},{"location":"general/#extensions","title":"Extensions","text":"<p>Extensions have some extra functions to deal with multiple extension types and runtime information</p>"},{"location":"general/#get-extensionsextension","title":"GET /extensions/{extension?}","text":"<p>Return a list or instance of an extension</p>"},{"location":"general/#get-extensionsextensionruntime","title":"GET /extensions/{extension}/runtime","text":"<p>Returns runtime information about  the extension from the PBX (i.e. CFIM, CFBS, ringdelay)</p>"},{"location":"general/#post-extensionsmailbox","title":"POST /extensions/mailbox","text":"<p>Create a new mailbox instance</p> <p>Body: <pre><code>'pkey' =&gt; 'required',\n'cluster' =&gt; 'required|exists:cluster,pkey'\n</code></pre></p>"},{"location":"general/#post-extensionsprovisioned","title":"POST /extensions/provisioned","text":"<p>Create a new sark65api provisioned instance</p> <p>Body: <pre><code>'pkey' =&gt; 'required',\n'cluster' =&gt; 'required|exists:cluster,pkey'\n'macaddr' =&gt; 'required|regex:/^[0-9a-fA-F]{12}$/'\n</code></pre></p>"},{"location":"general/#post-extensionsunprovisioned","title":"POST /extensions/unprovisioned","text":"<p>Create a new uprovisioned instance</p> <p>Body: <pre><code>'pkey' =&gt; 'required',\n'cluster' =&gt; 'required|exists:cluster,pkey'\n</code></pre></p>"},{"location":"general/#post-extensionswebrtc","title":"POST /extensions/webrtc","text":"<p>Create a new webrtc instance</p> <p>Body: <pre><code>'pkey' =&gt; 'required',\n'cluster' =&gt; 'required|exists:cluster,pkey'\n</code></pre></p>"},{"location":"general/#put-extensionsextension","title":"PUT /extensions/{extension}","text":"<p>Update an instance</p> <p>Body: <pre><code>'active' =&gt; 'in:YES,NO',\n'callbackto' =&gt; 'in:desk,cell',\n'callerid' =&gt; 'integer|nullable',\n'cellphone' =&gt; 'integer|nullable',\n'celltwin' =&gt; 'in:ON,OFF',\n'cluster' =&gt; 'exists:cluster,pkey',\n'devicerec' =&gt; 'in:None,OTR,OTRR,Inbound.Outbound,Both',\n'dvrvmail' =&gt; 'exists:ipphone,pkey|nullable',\n'location' =&gt; 'in:local,remote',\n'protocol' =&gt; 'in:IPV4,IPV6',\n'provision' =&gt; 'string|nullable',\n'provisionwith' =&gt; 'in:IP,FQDN',\n'sndcreds' =&gt; 'in:No,Once,Always',\n'transport' =&gt; 'in:udp,tcp,tls,wss',\n'vmailfwd' =&gt; 'email|nullable'\n</code></pre></p>"},{"location":"general/#put-extensionsextensionruntime","title":"PUT /extensions/{extension}/runtime","text":"<p>Update runtime information for an instance</p> <p>Body: <pre><code>'cfim' =&gt; :\n    ['regex:/^\\+?\\d+$/'],\n    ['nullable'],\n'cfbs' =&gt; \n    ['regex:/^\\+?\\d+$/'],\n    ['nullable'],            \n'ringdelay' =&gt; 'integer|nullable'\n</code></pre></p>"},{"location":"general/#delete-extensionsextension","title":"DELETE /extensions/{extension}","text":""},{"location":"general/#firewalls","title":"Firewalls","text":"<p>sark65api uses the Shorewall firewall to protect its resources.   The API operates on the entire ruleset as a simple array.   GET will return the rules, POST will update the rules and validate them (using shorewall itself) and PUT will restart the firewall.</p>"},{"location":"general/#get-firewallsipv4","title":"GET /firewalls/ipv4","text":"<p>return the IPV4 firewall rules</p>"},{"location":"general/#post-firewallsipv4","title":"POST /firewalls/ipv4","text":"<p>Upload a rules array to the server and validate it.</p> <p>Body: <pre><code>'rules' =&gt; 'required'\n</code></pre></p>"},{"location":"general/#put-firewallsipv4","title":"PUT /firewalls/ipv4","text":"<p>Restart the IPV4 firewall</p>"},{"location":"general/#get-firewallsipv6","title":"GET /firewalls/ipv6","text":"<p>return the IPV6 firewall rules</p>"},{"location":"general/#post-firewallsipv6","title":"POST /firewalls/ipv6","text":"<p>Upload a rules array to the server and validate it.</p> <p>Body: <pre><code>'rules' =&gt; 'required'\n</code></pre></p>"},{"location":"general/#put-firewallsipv6","title":"PUT /firewalls/ipv6","text":"<p>Restart the IPV6 firewall</p>"},{"location":"general/#greetings","title":"Greetings","text":""},{"location":"general/#get-greetings","title":"GET /greetings","text":"<p>Returns a list of greetings</p>"},{"location":"general/#get-greetingsgreeting","title":"GET /greetings/{greeting}","text":"<p>Download a greeting</p>"},{"location":"general/#post-greetings","title":"POST  /greetings","text":"<p>Upload a new greeting</p> <p>Body: <pre><code>'greeting' =&gt; 'required|file|mimes:wav,mpeg'\n</code></pre></p>"},{"location":"general/#delete-greetingsgreeting","title":"DELETE /greetings/{greeting}","text":"<p>Delete a greeting</p>"},{"location":"general/#non-recurring-timers-holidaytimers","title":"Non Recurring Timers (Holidaytimers)","text":""},{"location":"general/#get-holidaytimersholidaytimer","title":"GET /holidaytimers{holidaytimer?}","text":"<p>Return a list or instance of HolidayTimer.   Times are stored as epoch seconds.</p>"},{"location":"general/#post-holidaytimers","title":"POST /holidaytimers","text":"<p>Create a new Holidaytimer</p> <p>Body: <pre><code>'cluster' =&gt; 'exists:cluster,pkey',\n'route' =&gt; 'string',\n'desc' =&gt; 'string',\n'stime' =&gt; 'digits:10|nullable',\n'etime' =&gt; 'digits:10|nullable'\n</code></pre></p>"},{"location":"general/#put-holidaytimersholidaytimer","title":"PUT /holidaytimers/{holidaytimer}","text":"<p>update a timer</p> <p>Body: <pre><code>'cluster' =&gt; 'exists:cluster,pkey',\n'route' =&gt; 'string',\n'desc' =&gt; 'string',\n'stime' =&gt; 'digits:10|nullable',\n'etime' =&gt; 'digits:10|nullable'\n</code></pre></p>"},{"location":"general/#delete-holidaytimersholidaytimer","title":"DELETE  /holidaytimers/{holidaytimer}","text":""},{"location":"general/#inbound-routes","title":"Inbound Routes","text":"<p>Inbound routes (DDI's or DiD's) control the initial ingress into the PBX core</p>"},{"location":"general/#get-inboundroutesinboundroute","title":"GET /inboundroutes/{inboundroute?}","text":"<p>Return a list or instance of InboundRoute</p>"},{"location":"general/#post-inboundroutes","title":"POST /inboundroutes","text":"<p>Create a new inboundroute</p> <p>Body: <pre><code>'pkey' =&gt; 'required'\n'carrier' =&gt; 'required|in:DiD,CLID'\n'cluster' =&gt; 'required|exists:cluster'\n'trunkname' =&gt; 'required'\n</code></pre></p>"},{"location":"general/#put-inboundroutesinboundroute","title":"PUT /inboundroutes/{inboundroute}","text":"<p>update an inboundroute</p> <p>Body: <pre><code>'active' =&gt; 'in:YES,NO', \n'alertinfo' =&gt; 'string',\n'carrier' =&gt; 'in:DiD,CLID',\n'closeroute' =&gt; 'string',\n'cluster' =&gt; 'exists:cluster,pkey',\n'description' =&gt; 'alpha_num',\n'disa' =&gt; 'in:DISA,CALLBACK|nullable',\n'disapass' =&gt; 'alpha_num|nullable',\n'inprefix' =&gt; 'integer|nullable',\n'moh' =&gt; 'in:ON,OFF',\n'openroute' =&gt; 'string',\n'swoclip' =&gt; 'in:YES,NO',\n'tag' =&gt; 'alpha_num|nullable',\n</code></pre></p>"},{"location":"general/#delete-inboundroutesinboundroute","title":"DELETE  /inboundroutes/{inboundroute}","text":""},{"location":"general/#ivrs","title":"IVRs","text":"<p>IVRs optionally control ACD into the PBX core</p>"},{"location":"general/#get-ivrsivr","title":"GET /ivrs/{ivr?}","text":"<p>Return a list or instance of Ivr</p>"},{"location":"general/#post-ivrs","title":"POST /ivrs","text":"<p>Create a new ivr</p> <p>Body: <pre><code>'pkey' =&gt; 'required'\n'cluster' =&gt; 'required|exists:cluster'\n</code></pre></p>"},{"location":"general/#put-ivrsivr","title":"PUT /ivrs/{ivr}","text":"<p>update an ivr</p> <p>Body: <pre><code>'alert0' =&gt; 'string|nullable',\n'alert1' =&gt; 'string|nullable',\n'alert2' =&gt; 'string|nullable',\n'alert3' =&gt; 'string|nullable',\n'alert4' =&gt; 'string|nullable',\n'alert5' =&gt; 'string|nullable',\n'alert6' =&gt; 'string|nullable',\n'alert7' =&gt; 'string|nullable',\n'alert8' =&gt; 'string|nullable',\n'alert9' =&gt; 'string|nullable',\n'alert10' =&gt; 'string|nullable',\n'alert11' =&gt; 'string|nullable',            \n'description' =&gt; 'string|nullable',\n'cluster' =&gt; 'exists:cluster,pkey',\n'greetnum' =&gt; 'integer',\n'listenforext' =&gt; 'in:YES,NO',\n'option0' =&gt; 'string|nullable',\n'option1' =&gt; 'string|nullable',\n'option2' =&gt; 'string|nullable',\n'option3' =&gt; 'string|nullable',\n'option4' =&gt; 'string|nullable',\n'option5' =&gt; 'string|nullable',\n'option6' =&gt; 'string|nullable',\n'option7' =&gt; 'string|nullable',\n'option8' =&gt; 'string|nullable',\n'option9' =&gt; 'string|nullable',\n'option10' =&gt; 'string|nullable',\n'option11' =&gt; 'string|nullable',\n'tag0' =&gt; 'string|nullable',\n'tag1' =&gt; 'string|nullable',\n'tag2' =&gt; 'string|nullable',\n'tag3' =&gt; 'string|nullable',\n'tag4' =&gt; 'string|nullable',\n'tag5' =&gt; 'string|nullable',\n'tag6' =&gt; 'string|nullable',\n'tag7' =&gt; 'string|nullable',\n'tag8' =&gt; 'string|nullable',\n'tag9' =&gt; 'string|nullable',\n'tag10' =&gt; 'string|nullable',\n'tag11' =&gt; 'string|nullable',            \n'timeout' =&gt; 'operator',\n</code></pre></p>"},{"location":"general/#delete-ivrsivr","title":"DELETE  /ivrs/{ivr}","text":""},{"location":"general/#logscdrs","title":"Logs/CDRs","text":"<p>Here is a placeholder for general logs.   In the initial out it only has a method to retrieve CDR.</p>"},{"location":"general/#get-logscdrslimit","title":"GET /logs/cdrs/{limit?}","text":"<p>Download the CDR log.   If {limit} is specified, download the last {limit} rows</p>"},{"location":"general/#queues","title":"Queues","text":"<p>Queues optionally control ACD into the PBX core</p>"},{"location":"general/#get-queuesqueue","title":"GET /queues{queue?}","text":"<p>Return a list or instance of Queue</p>"},{"location":"general/#post-queues","title":"POST /queues","text":"<p>Create a new queue</p> <p>Body: <pre><code>'pkey' =&gt; 'required'\n'cluster' =&gt; 'required|exists:cluster'\n</code></pre></p>"},{"location":"general/#put-queuesqueue","title":"PUT /queues/{queue}","text":"<p>update a queue</p> <p>Body: <pre><code>'conf' =&gt; 'string',\n'cluster' =&gt; 'exists:cluster,pkey',\n'devicerec' =&gt; 'in:None,OTR,OTRR,Inbound',\n'greetnum' =&gt; 'regex:/^usergreeting\\d{4}$',\n'options' =&gt; 'alpha',\n</code></pre></p>"},{"location":"general/#delete-queuesqueue","title":"DELETE  /queues/{queue}","text":""},{"location":"general/#snapshots","title":"Snapshots","text":"<p>A snapshot is an instance of the sark65api db. </p>"},{"location":"general/#get-snapshots","title":"GET /snapshots","text":"<p>return a list of available snapshots on the server</p>"},{"location":"general/#get-snapshotssnapshot","title":"GET /snapshots/{snapshot}","text":"<p>Download an existing snapshot from the server</p>"},{"location":"general/#get-snapshotsnew","title":"GET /snapshots/new","text":"<p>Request a new snapshot be taken and saved in the snapshot set</p>"},{"location":"general/#post-snapshots","title":"POST /snapshots","text":"<p>Upload a local snapshot to the snapshot set on the server</p> <p>Body: <pre><code>'uploadsnap' =&gt; 'required|file|mimetypes:application/zip'\n</code></pre></p>"},{"location":"general/#put-snapshotssnapshot","title":"PUT /snapshots/{snapshot}","text":"<p>Restore an existing snapshot from the snapshot set to the live system.</p>"},{"location":"general/#delete-snapshotssnapshot","title":"DELETE /snapshots/{snapshot}","text":""},{"location":"general/#routes","title":"Routes","text":""},{"location":"general/#get-routesroute","title":"GET /routes/{route?}","text":"<p>return a list or instance of ringgroup</p>"},{"location":"general/#post-route","title":"POST /route","text":"<p>Create a new route</p> <p>Body: <pre><code>'pkey' =&gt; 'required'\n'cluster' = 'required|exists:cluster,'\n'outcome' = 'required;\n</code></pre></p>"},{"location":"general/#put-routesroute","title":"PUT /routes/{route}","text":"<p>Update an existing route</p> <p>Body: <pre><code>'active' =&gt; 'in:YES,NO',\n'auth' =&gt; 'in:YES,NO',\n'cluster' =&gt; 'exists:cluster,pkey',\n'desc' =&gt; 'alpha_dash',\n'dialplan' =&gt; 'string',\n'path1' =&gt; 'exists:lineio,pkey|nullable',\n'path2' =&gt; 'exists:lineio,pkey|nullable',\n'path3' =&gt; 'exists:lineio,pkey|nullable',\n'path4' =&gt; 'exists:lineio,pkey|nullable',\n'strategy' =&gt; 'in:hunt,balance'\n</code></pre></p>"},{"location":"general/#delete-routesroute","title":"DELETE /routes/{route}","text":""},{"location":"general/#system-commands","title":"System Commands","text":"<p>System commands use the GET method</p>"},{"location":"general/#get-syscommandscommand","title":"GET /syscommands/{command}","text":"<p>Available Commands</p> <ul> <li>commit</li> <li>reboot</li> <li>pbxrunstate</li> <li>pbxstart</li> <li>pbxstop</li> </ul>"},{"location":"general/#system-globals","title":"System Globals","text":"<p>Globals are system wide variables which control PBX default behaviours.  They cannot be created or deleted.</p>"},{"location":"general/#get-sysglobals","title":"GET /sysglobals","text":"<p>return a list of global settings</p>"},{"location":"general/#put-sysglobals","title":"PUT /sysglobals","text":"<p>update Global settings</p> <p>Body: <pre><code>'ABSTIMEOUT' =&gt; 'integer',\n'ACL' =&gt; 'in:NO,YES',\n'AGENTSTART' =&gt; 'integer',\n'ALERT' =&gt; 'email',\n'ALLOWHASHXFER' =&gt; 'in:enabled,disabled',\n'BLINDBUSY' =&gt; 'integer|nullable',\n'BOUNCEALERT' =&gt; 'integer|nullable',\n'CALLPARKING' =&gt; 'in:NO,YES',\n'CALLRECORD1' =&gt; 'in:None,OTR,OTRR,Inbound.Outbound,Both',\n'CAMPONQONOFF' =&gt; 'in:OFF,ON',\n'CAMPONQOPT' =&gt; 'string|nullable',\n'CFWDEXTRNRULE' =&gt; 'in:enabled,disabled',\n'CFWDPROGRESS' =&gt; 'in:enabled,disabled',\n'CFWDANSWER' =&gt; 'in:enabled,disabled',\n'CLUSTER' =&gt; 'in:ON,OFF',\n'CONFTYPE' =&gt; 'in:simple,hosted',\n'COSSTART' =&gt; 'in:ON,OFF',\n'COUNTRYCODE' =&gt; 'alpha|size:2',\n'EURL' =&gt; 'regex:/^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/',\n'EMERGENCY' =&gt; 'digits:3',\n'FQDN' =&gt; 'regex:/^(?!:\\/\\/)(?=.{1,255}$)((.{1,63}\\.){1,127}(?![0-9]*$)[a-z0-9-]+\\.?)$/i',\n'FQDNINSPECT' =&gt; 'in:NO,YES',\n'FQDNPROV' =&gt; 'in:NO,YES',\n'INTRINGDELAY' =&gt; 'integer',\n'IVRKEYWAIT' =&gt; 'integer|nullable',\n'IVRDIGITWAIT' =&gt; 'integer|nullable',\n'LACL' =&gt; 'in:NO,YES',\n'LDAPBASE' =&gt; 'string|nullable',\n'LDAPOU' =&gt; 'string|nullable',\n'LDAPUSER' =&gt; 'string|nullable',\n'LDAPPASS' =&gt; 'string|nullable',\n'LEASEHDTIME' =&gt; 'integer',\n'LOCALIP' =&gt; 'ip',\n'LOGLEVEL' =&gt; 'integer',        \n'LOGSIPDISPSIZE' =&gt; 'integer',\n'LOGSIPNUMFILES' =&gt; 'integer',\n'LOGSIPFILESIZE' =&gt; 'integer',\n'LTERM' =&gt; 'in:NO,YES',\n'MAXIN' =&gt; 'integer',\n'MIXMONITOR' =&gt; 'in:NO,YES',\n'MONITOROUT' =&gt; 'string',\n'MONITORSTAGE' =&gt; 'string',\n'MONITORTYPE' =&gt; 'in:monitor,mixmonitor',\n'NATDEFAULT' =&gt; 'in:local,remote',\n'OPERATOR' =&gt; 'integer',\n'PWDLEN' =&gt; 'integer',    \n'PLAYBEEP' =&gt; 'in:YES.NO',\n'PLAYBUSY' =&gt; 'in:YES,NO',\n'PLAYCONGESTED' =&gt; 'in:YES,NO',\n'PLAYTRANSFER' =&gt; 'in:YES,NO',\n'RECFINALDEST' =&gt; 'string',\n'RECLIMIT' =&gt; 'integer',\n'RECQDITHER' =&gt; 'integer',\n'RECQSEARCHLIM' =&gt; 'integer',       \n'RINGDELAY' =&gt; 'integer',\n'SESSIONTIMOUT' =&gt; 'integer',\n'SENDEDOMAIN' =&gt; 'in:YES,NO',\n'SIPIAXSTART' =&gt; 'integer',\n'SIPFLOOD' =&gt; 'in:NO,YES',\n'SPYPASS' =&gt; 'integer',\n'SUPEMAIL' =&gt; 'email|nullable',\n'SYSOP' =&gt; 'integer',\n'SYSPASS' =&gt; 'integer',    \n'TLSPORT' =&gt; 'integer',\n'USEROTP' =&gt; 'string',\n'USERCREATE' =&gt; 'in:NO,YES',\n'VDELAY' =&gt; 'integer',\n'VMAILAGE' =&gt; 'integer',\n'VOICEINSTR' =&gt; 'in:YES,NO',\n'VOIPMAX' =&gt; 'integer',\n'VXT' =&gt; 'in:0,1',\n'ZTP' =&gt; 'in:disabled,enabled'\n</code></pre></p>"},{"location":"general/#templates","title":"Templates","text":"<p>Templates are used to create provisioning streams</p>"},{"location":"general/#get-templatestemplate","title":"GET /templates/{template?}","text":"<p>Return a list or instance of Template</p>"},{"location":"general/#post-templates","title":"POST /templates","text":"<p>Create a new template</p> <p>Body: <pre><code>'pkey' =&gt; 'required'\n'technology' =&gt; 'required|in:SIP,Descriptor,BLF Template';\n</code></pre></p>"},{"location":"general/#put-templatesstemplate","title":"PUT /templatess/{template}","text":"<p>update a template</p> <p>Body: <pre><code>'blfkeyname' =&gt; 'exists:device,pkey|nullable',\n'desc' =&gt; 'string',\n'provision' =&gt; 'string|nullable',\n'technology' =&gt; 'in:SIP,Descriptor,BLF Template';\n</code></pre></p>"},{"location":"general/#delete-templatesstemplate","title":"DELETE //templatess/{template}","text":"<p>Delete a template.  Only user created templates can be deleted.  System templates can not.</p>"},{"location":"general/#tenants","title":"Tenants","text":"<p>Tenants are used to define classes of  PBX resources.  Usually, but not always, they are customers.  For historical reasons, Tenants are internally referred to as clusters.</p>"},{"location":"general/#get-tenantstenants","title":"GET /tenants/{tenants?}","text":"<p>Return a list or instance of Tenant</p>"},{"location":"general/#post-tenants","title":"POST /tenants","text":"<p>Create a new tenant</p> <p>Body: <pre><code>'pkey' =&gt; 'string|required'\n'description' =&gt; 'string|required'\n</code></pre></p>"},{"location":"general/#put-tenantstenant","title":"PUT /tenants/{tenant}","text":"<p>update a tenant</p> <p>Body: <pre><code>            'abstimeout' =&gt; 'integer',\n            'allow_hash_xfer' =&gt; 'in:enabled,disabled',\n            'callrecord1' =&gt; 'in:None,In,Out,Both',\n            'cfwdextern_rule' =&gt; 'In:YES,NO',\n            'cfwd_progress' =&gt; 'in:enabled,disabled',\n            'cfwd_answer' =&gt; 'in:enabled,disabled',\n            'clusterclid' =&gt; 'integer|nullable',\n            'chanmax' =&gt; 'integer',\n            'countrycode' =&gt; 'integer',\n            'dynamicfeatures' =&gt; 'string',\n            'description' =&gt; 'string',\n            'emergency' =&gt; 'integer',\n            'int_ring_delay' =&gt; 'integer',\n            'ivr_key_wait' =&gt; 'integer',\n            'ivr_digit_wait' =&gt; 'integer',\n            'language' =&gt; 'string',\n            'ldapanonbind' =&gt; 'YES',\n            'ldapbase' =&gt; 'string',\n            'ldaphost' =&gt; 'string',\n            'ldapou' =&gt; 'string',\n            'ldapuser' =&gt; 'string',\n            'ldappass' =&gt; 'sarkstring',\n            'ldaptls' =&gt; 'in:on,off',\n            'localarea' =&gt; 'numeric|nullable',\n            'localdplan' =&gt; [\n                    'regex:/^_X+$/',\n                    'nullable'\n            ],\n            'lterm' =&gt; 'boolean',\n            'leasedhdtime' =&gt; 'integer|nullable',\n            'masteroclo' =&gt; 'in:AUTO,CLOSED',\n            'max_in' =&gt; 'integer',\n            'monitor_out' =&gt; 'string',\n            'operator' =&gt; 'integer',\n            'pickupgroup' =&gt; 'string',\n            'play_beep' =&gt; 'boolean',\n            'play_busy' =&gt; 'boolean',\n            'play_congested' =&gt; 'boolean',\n            'play_transfer' =&gt; 'boolean',\n            'rec_age' =&gt; 'integer',\n            'rec_final_dest' =&gt; 'string',\n            'rec_file_dlim' =&gt; 'string',\n            'rec_grace' =&gt; 'integer',\n            'rec_limit' =&gt; 'integer',\n            'rec_mount' =&gt; 'integer',\n            'recmaxage' =&gt; 'integer',\n            'recmaxsize' =&gt; 'integer',\n            'recused' =&gt; 'integer',\n            'ringdelay' =&gt; 'integer',\n            'routeoverride' =&gt; 'integer',\n            'spy_pass' =&gt; 'integer',\n            'sysop' =&gt; 'integer',\n            'syspass' =&gt; 'integer',\n            'usemohcustom' =&gt; 'integer|nullable',\n            'vmail_age' =&gt; 'integer',\n            'voice_instr' =&gt; 'boolean',\n            'voip_max' =&gt; 'integer'\n</code></pre></p>"},{"location":"general/#delete-tenantstenant","title":"DELETE /tenants/{tenant}","text":"<p>Deleting a tenant will delete ALL of its dependencies.</p>"},{"location":"general/#trunks","title":"Trunks","text":"<p>Trunks are used to define peers.   Mostly you can think of them as axes of egress from the PBX (Ingress is usually defined by DDI/DiD abstractions)</p>"},{"location":"general/#get-trunkstrunk","title":"GET /trunks/{trunk?}","text":"<p>Return a list or instance of Trunks</p>"},{"location":"general/#post-trunks","title":"POST /trunks","text":"<p>Create a new trunk</p> <p>Body: <pre><code>'pkey' =&gt; 'required'\n'carrier' =&gt; 'required|in:GeneralSIP,GeneralIAX2'\n'cluster' =&gt; 'required|exists:cluster,' . $request-&gt;cluster\n'username' =&gt; 'required'\n'host' =&gt; 'required'\n</code></pre></p>"},{"location":"general/#put-trunkstrunk","title":"PUT /trunks/{trunk}","text":"<p>update a trunk</p> <p>Body: <pre><code>'active' =&gt; 'in:YES,NO', \n'alertinfo' =&gt; 'string',\n'callerid' =&gt; 'integer',\n'callprogress' =&gt; 'in:ON,OFF',\n'cluster' =&gt; 'exists:cluster,pkey',\n'description' =&gt; 'alpha_num',\n'devicerec' =&gt; 'in:None,OTR,OTRR,Inbound.Outbound,Both',\n'disa' =&gt; 'in:DISA,CALLBACK|nullable',\n'disapass' =&gt; 'alpha_num|nullable',\n'host' =&gt; 'string', \n'inprefix' =&gt; 'integer|nullable',\n'match' =&gt; 'integer|nullable',\n'moh' =&gt; 'in:ON,OFF',\n'password' =&gt; 'alpha_num|nullable',\n'peername' =&gt; 'string',\n'register' =&gt; 'string|nullable',\n'sipiaxpeer' =&gt; 'string',\n'sipiaxuser' =&gt; 'string',\n'swoclip' =&gt; 'in:YES,NO',\n'tag' =&gt; 'alpha_num|nullable',\n'transform' =&gt; [\n:'regex:/$(\\d+?:\\d+?\\s*)+',\n:'nullable'\n],\n'trunkname' =&gt; 'alpha_num',\n</code></pre></p>"},{"location":"general/#delete-trunkstrunk","title":"DELETE /trunks/{trunk}","text":""},{"location":"general/#asterisk-ami-functions-exposed-by-the-api","title":"Asterisk AMI functions exposed by the API","text":"<p>sark65api gives you access to a range of functions from the Asterisk Manager Interface(AMI).  This allows you to examine, and in some cases change, state information from the running PBX.  N.B. sark65api implements blocking AMI requests.  if you want to access non-blocking AMI streams then you can look at something like PAMI.</p> <ul> <li>Most of the AMI functions use GET.   They return either an instance list or a single instance.  </li> <li>The AMI ''''Originate'''' bridging function uses POST </li> <li>Asterisk internal database ''''DBPut'''' uses PUT</li> <li>Asterisk internal database ''''DBDel'''' uses DELETE</li> <li>AMI function names are case sensitive for consistency with the Asterisk AMI documentation (of which, there is very little).  </li> <li>We have not documented the returned variables so you will need to run the requests using something like Postman and decide what you want by examination.</li> </ul>"},{"location":"general/#list-ami-functions","title":"List AMI Functions","text":"<p>Each of these functions will return a JSON array</p>"},{"location":"general/#get-astamis","title":"GET /astamis/","text":"<ul> <li>Agents</li> <li>ConfbridgeList/{''room-number''} </li> <li>ConfbridgeListRooms       </li> <li>CoreShowChannels</li> <li>DeviceStateList</li> <li>ExtensionStateList</li> <li>IAXpeers</li> <li>IAXregistry</li> <li>QueueStatus  </li> <li>QueueSummary                </li> <li>SIPpeers </li> <li>SIPshowregistry</li> <li>Status</li> <li>VoicemailUsersList</li> </ul>"},{"location":"general/#instance-ami-functions","title":"Instance AMI Functions","text":"<p>GET /astamis/ </p> <ul> <li>CoreSettings</li> <li>CoreStatus</li> <li>ExtensionState/{''id''}{''context?''}</li> <li>MailboxCount/{''id''}</li> <li>MailboxStatus/{''id''}</li> <li>QueueStatus/{''id''}</li> <li>QueueSummary/{''id}''</li> <li>Reload</li> <li>SIPshowpeer/{''id''}</li> </ul>"},{"location":"general/#post-astamisoriginate","title":"POST /astamis/originate","text":"<p>originate a new bridge</p> <p>Body:</p> <pre><code>target = 'required|integer';\ncaller = 'required|numeric';\ncontext = 'required|alpha_dash'\nclid = 'required|numeric';\n</code></pre>"},{"location":"general/#asterisk-internal-db-astdb-functions","title":"Asterisk internal DB (AstDB) functions","text":""},{"location":"general/#get-astamisdbpgetidkey","title":"GET /astamis/DBPGet/{id}/{key}","text":""},{"location":"general/#put-astamisdbputidkeyvalue","title":"PUT /astamis/DBPut/{id}/{key}(value)","text":""},{"location":"general/#delete-astamisdbdelidkey","title":"DELETE /astamis/DBdel/{id}/{key}","text":""},{"location":"general/#asterisk-soft-hangup","title":"Asterisk soft Hangup","text":""},{"location":"general/#delete-astamishangupidkey","title":"DELETE /astamis/Hangup/{id}/{key}","text":"<p>Hangup perfoms a \"soft\" hangup on a running channel.  The actual channel can be either side of the call bridge, it doesn't matter which you choose in a regular two-party call.  As an example, let's say we wish to hangup a channel called PJSIP/44107-00000155.   Here's what you would send:-</p> <pre><code>https://sip.mypbx.com:44300/api/astamis/Hangup/PJSIP/44107-00000155\n</code></pre>"}]}